{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnConcurrentRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Database","preciseIdentifier":"s:4GRDB8DatabaseC","text":"Database"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure which accesses the database. Its argument"},{"type":"text","text":" "},{"type":"text","text":"is a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" that provides the database connection, or the failure"},{"type":"text","text":" "},{"type":"text","text":"that would prevent establishing the read access to the database."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/groue\/GRDB.swift\/blob\/master\/README.md#what-are-experimental-features"}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method must be called from the writer dispatch queue, outside of"},{"type":"text","text":" "},{"type":"text","text":"any transaction. Youâ€™ll get a fatal error otherwise."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Database operations performed by the "},{"type":"codeVoice","code":"value"},{"type":"text","text":" closure are isolated in a"},{"type":"text","text":" "},{"type":"text","text":"transaction: they do not see changes performed by eventual concurrent"},{"type":"text","text":" "},{"type":"text","text":"writes (even writes performed by other processes)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"They see the database in the state left by the last updates performed"},{"type":"text","text":" "},{"type":"text","text":"by the database writer."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example below, the number of players is fetched concurrently with"},{"type":"text","text":" "},{"type":"text","text":"the player insertion. Yet the future is guaranteed to return zero:"}]},{"type":"codeListing","syntax":"swift","code":["try writer.writeWithoutTransaction { db in","    \/\/ Delete all players","    try Player.deleteAll()","","    \/\/ Count players concurrently","    writer.spawnConcurrentRead { db in","        do {","            let db = try dbResult.get()","            \/\/ Guaranteed to be zero","            let count = try Player.fetchCount(db)","        } catch {","            \/\/ Handle error","        }","    }","","    \/\/ Insert a player","    try Player(...).insert(db)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/grdb\/databasewriter\/spawnconcurrentread(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseWriter\/spawnConcurrentRead(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Schedules read-only database operations for execution, and"},{"type":"text","text":" "},{"type":"text","text":"returns immediately."}],"kind":"symbol","metadata":{"role":"symbol","title":"spawnConcurrentRead(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnConcurrentRead"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:4GRDB8DatabaseC"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:4GRDB14DatabaseWriterP19spawnConcurrentReadyyys6ResultOyAA0B0Cs5Error_pGcF","required":true,"modules":[{"name":"GRDB"}]},"hierarchy":{"paths":[["doc:\/\/GRDB\/documentation\/GRDB","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseConnections","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseWriter"]]},"seeAlsoSections":[{"title":"Reading from the Database","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/DatabaseWriter\/concurrentRead(_:)","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseFuture"],"generated":true}],"references":{"doc://GRDB/documentation/GRDB":{"role":"collection","title":"GRDB","abstract":[{"type":"text","text":"A toolkit for SQLite databases, with a focus on application development"}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB","kind":"symbol","type":"topic","url":"\/documentation\/grdb"},"doc://GRDB/documentation/GRDB/DatabaseWriter/spawnConcurrentRead(_:)":{"role":"symbol","title":"spawnConcurrentRead(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnConcurrentRead"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:4GRDB8DatabaseC"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Schedules read-only database operations for execution, and"},{"type":"text","text":" "},{"type":"text","text":"returns immediately."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseWriter\/spawnConcurrentRead(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/grdb\/databasewriter\/spawnconcurrentread(_:)"},"doc://GRDB/documentation/GRDB/Database":{"role":"symbol","title":"Database","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Database"}],"abstract":[{"type":"text","text":"An SQLite connection."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Database","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Database"}],"url":"\/documentation\/grdb\/database"},"doc://GRDB/documentation/GRDB/DatabaseWriter/concurrentRead(_:)":{"role":"symbol","title":"concurrentRead(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrentRead"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:4GRDB8DatabaseC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DatabaseFuture","preciseIdentifier":"s:4GRDB14DatabaseFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Schedules read-only database operations for execution, and returns a"},{"type":"text","text":" "},{"type":"text","text":"future value."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseWriter\/concurrentRead(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/grdb\/databasewriter\/concurrentread(_:)"},"doc://GRDB/documentation/GRDB/DatabaseConnections":{"role":"collectionGroup","title":"Database Connections","abstract":[{"type":"text","text":"Open database connections to SQLite databases."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseConnections","kind":"article","type":"topic","url":"\/documentation\/grdb\/databaseconnections"},"doc://GRDB/documentation/GRDB/DatabaseFuture":{"role":"symbol","title":"DatabaseFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseFuture"}],"abstract":[{"type":"text","text":"A future database value."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseFuture","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseFuture"}],"url":"\/documentation\/grdb\/databasefuture"},"doc://GRDB/documentation/GRDB/DatabaseWriter":{"role":"symbol","title":"DatabaseWriter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseWriter"}],"abstract":[{"type":"text","text":"A type that write into an SQLite database."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseWriter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseWriter"}],"url":"\/documentation\/grdb\/databasewriter"},"https://github.com/groue/GRDB.swift/blob/master/README.md#what-are-experimental-features":{"title":"ðŸ”¥ EXPERIMENTAL","titleInlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"ðŸ”¥ EXPERIMENTAL"}]}],"type":"link","identifier":"https:\/\/github.com\/groue\/GRDB.swift\/blob\/master\/README.md#what-are-experimental-features","url":"https:\/\/github.com\/groue\/GRDB.swift\/blob\/master\/README.md#what-are-experimental-features"}}}