{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMany"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"destination"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"kind":"internalParam","text":"foreignKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ForeignKey","preciseIdentifier":"s:4GRDB10ForeignKeyV","text":"ForeignKey"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/HasManyAssociation","preciseIdentifier":"s:4GRDB18HasManyAssociationV","text":"HasManyAssociation"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/TableRecord","preciseIdentifier":"s:4GRDB11TableRecordP","text":"TableRecord"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"destination","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The record type at the other side of the association."}]}]},{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The association key. By default, it"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"Destination.databaseTableName"},{"type":"text","text":"."}]}]},{"name":"foreignKey","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An eventual foreign key. You need to provide one when"},{"type":"text","text":" "},{"type":"text","text":"no foreign key exists to the destination table, or several foreign"},{"type":"text","text":" "},{"type":"text","text":"keys exist."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["struct Book: TableRecord { }","struct Author: TableRecord {","    static let books = hasMany(Book.self)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The association lets you define requests that involve both the source"},{"type":"text","text":" "},{"type":"text","text":"and the destination type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, we can fetch all authors with all their books:"}]},{"type":"codeListing","syntax":"swift","code":["struct AuthorInfo: FetchableRecord, Decodable {","    var author: Author","    var books: [Book]","}","","try dbQueue.read { db in","    let request = Author","        .including(all: Author.books)","        .asRequest(of: AuthorInfo.self)","    let authorInfos = try request.fetchAll(db)","    for authorInfo in authorInfos {","        print(\"\\(authorInfo.author.name) wrote \\(authorInfo.books.count) books\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The association can also help fetching associated records:"}]},{"type":"codeListing","syntax":"swift","code":["try dbQueue.read { db in","    let author: Author = ...","    let books: [Book] = author","        .request(for: Author.books)","        .fetchAll(db)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information about this association,"},{"type":"text","text":" "},{"type":"text","text":"see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/HasManyAssociation"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Methods that build requests involving associations are defined in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/JoinableRequest"},{"type":"text","text":" protocol."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/grdb\/record\/hasmany(_:key:using:)-5kodv"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GRDB\/documentation\/GRDB\/Record\/hasMany(_:key:using:)-5kodv","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/HasManyAssociation"},{"type":"text","text":" between "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" and the"},{"type":"text","text":" "},{"type":"text","text":"destination "},{"type":"codeVoice","code":"TableRecord"},{"type":"text","text":" type."}],"kind":"symbol","metadata":{"role":"symbol","title":"hasMany(_:key:using:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMany"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ForeignKey","preciseIdentifier":"s:4GRDB10ForeignKeyV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"HasManyAssociation","preciseIdentifier":"s:4GRDB18HasManyAssociationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:4GRDB11TableRecordPAAE7hasMany_3key5usingAA03HasE11AssociationVyxqd__Gqd__m_SSSgAA10ForeignKeyVSgtAaBRd__lFZ::SYNTHESIZED::s:4GRDB6RecordC","extendedModule":"GRDB","modules":[{"name":"GRDB"}]},"hierarchy":{"paths":[["doc:\/\/GRDB\/documentation\/GRDB","doc:\/\/GRDB\/documentation\/GRDB\/QueryInterface","doc:\/\/GRDB\/documentation\/GRDB\/Record","doc:\/\/GRDB\/documentation\/GRDB\/Record\/TableRecord-Implementations"]]},"references":{"doc://GRDB/documentation/GRDB/QueryInterface":{"role":"collectionGroup","title":"Record Types and the Query Interface","abstract":[{"type":"text","text":"Record types and the query interface build SQL queries for you"}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/QueryInterface","kind":"article","type":"topic","url":"\/documentation\/grdb\/queryinterface"},"doc://GRDB/documentation/GRDB/TableRecord":{"role":"symbol","title":"TableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TableRecord"}],"abstract":[{"type":"text","text":"A type that builds database queries with the Swift language instead of SQL."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/TableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TableRecord"}],"url":"\/documentation\/grdb\/tablerecord"},"doc://GRDB/documentation/GRDB/JoinableRequest":{"role":"symbol","title":"JoinableRequest","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JoinableRequest"}],"abstract":[{"type":"text","text":"A request that can join and prefetch associations."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/JoinableRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JoinableRequest"}],"url":"\/documentation\/grdb\/joinablerequest"},"doc://GRDB/documentation/GRDB/HasManyAssociation":{"role":"symbol","title":"HasManyAssociation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HasManyAssociation"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HasManyAssociation"},{"type":"text","text":" indicates a one-to-many connection between two"},{"type":"text","text":" "},{"type":"text","text":"record types, such as each instance of the declaring record “has many”"},{"type":"text","text":" "},{"type":"text","text":"instances of the other record."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/HasManyAssociation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HasManyAssociation"}],"url":"\/documentation\/grdb\/hasmanyassociation"},"doc://GRDB/documentation/GRDB/Record":{"role":"symbol","title":"Record","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}],"abstract":[{"type":"text","text":"A base class for types that can be fetched and persisted in the database."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Record","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Record"}],"url":"\/documentation\/grdb\/record"},"doc://GRDB/documentation/GRDB":{"role":"collection","title":"GRDB","abstract":[{"type":"text","text":"A toolkit for SQLite databases, with a focus on application development"}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB","kind":"symbol","type":"topic","url":"\/documentation\/grdb"},"doc://GRDB/documentation/GRDB/Record/hasMany(_:key:using:)-5kodv":{"role":"symbol","title":"hasMany(_:key:using:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMany"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ForeignKey","preciseIdentifier":"s:4GRDB10ForeignKeyV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"HasManyAssociation","preciseIdentifier":"s:4GRDB18HasManyAssociationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/HasManyAssociation"},{"type":"text","text":" between "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" and the"},{"type":"text","text":" "},{"type":"text","text":"destination "},{"type":"codeVoice","code":"TableRecord"},{"type":"text","text":" type."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Record\/hasMany(_:key:using:)-5kodv","kind":"symbol","type":"topic","url":"\/documentation\/grdb\/record\/hasmany(_:key:using:)-5kodv"},"doc://GRDB/documentation/GRDB/ForeignKey":{"role":"symbol","title":"ForeignKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForeignKey"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ForeignKey"},{"type":"text","text":" defines on which columns an association between two tables"},{"type":"text","text":" "},{"type":"text","text":"is established."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ForeignKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForeignKey"}],"url":"\/documentation\/grdb\/foreignkey"},"doc://GRDB/documentation/GRDB/Record/TableRecord-Implementations":{"role":"collectionGroup","title":"TableRecord Implementations","abstract":[],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Record\/TableRecord-Implementations","kind":"article","type":"topic","url":"\/documentation\/grdb\/record\/tablerecord-implementations"}}}