{"seeAlsoSections":[{"title":"Fundamentals","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/DatabaseConnections"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This section of the documentation focuses on low-level SQLite concepts: the SQL language, prepared statements, database rows and values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If SQL is not your cup of tea, jump to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/QueryInterface"},{"type":"text","text":"."}]},{"anchor":"SQL-Support","level":2,"type":"heading","text":"SQL Support"},{"type":"paragraph","inlineContent":[{"type":"text","text":"GRDB supports a wide support for SQL. You can execute raw SQL statements:"}]},{"type":"codeListing","syntax":"swift","code":["try dbQueue.write { db in","    try db.execute(sql: \"\"\"","        INSERT INTO player (name, score) VALUES (?, ?);","        INSERT INTO player (name, score) VALUES (?, ?);","        \"\"\", arguments: [\"Arthur\", 500, \"Barbara\", 1000])","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can build prepared statements and lazily iterate fetched rows with great performances:"}]},{"type":"codeListing","syntax":"swift","code":["try dbQueue.read { db in","    let statement = try db.makeStatement(sql: \"\"\"","        SELECT id, score FROM player WHERE name = ?","        \"\"\")","    let rows = try Row.fetchCursor(statement, arguments: [\"O'Brien\"])","    while let row = try rows.next() {","        let id: Int64 = row[0]","        let score: Int = row[1]","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And you can leverage "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SQLRequest"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/FetchableRecord"},{"type":"text","text":" for defining streamlined apis with powerful SQL interpolation features:"}]},{"type":"codeListing","syntax":"swift","code":["struct Player: Decodable {","    var id: Int64","    var name: String","    var score: Int","}","","extension Player: FetchableRecord {","    static func filter(name: String) -> SQLRequest<Player> {","        \"SELECT * FROM player WHERE name = \\(name)\"","    }","","    static func maximumScore() -> SQLRequest<Int> {","        \"SELECT MAX(score) FROM player\"","    }","}","","try dbQueue.read { db in","    let players = try Player.filter(name: \"O'Reilly\").fetchAll(db) \/\/ [Player]","    let maxScore = try Player.maximumScore().fetchOne(db)          \/\/ Int?","}"]}]}],"variants":[{"paths":["\/documentation\/grdb\/sqlsupport"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GRDB\/documentation\/GRDB\/SQLSupport","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"SQL is the fundamental language for accessing SQLite databases."}],"kind":"article","metadata":{"modules":[{"name":"GRDB"}],"role":"collectionGroup","title":"SQL, Prepared Statements, Rows, and Values"},"hierarchy":{"paths":[["doc:\/\/GRDB\/documentation\/GRDB"]]},"topicSections":[{"title":"Fundamental Database Types","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/Statement","doc:\/\/GRDB\/documentation\/GRDB\/Row","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseValue","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseCursor"]},{"title":"SQL Literals and Requests","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/databaseQuestionMarks(count:)","doc:\/\/GRDB\/documentation\/GRDB\/SQL","doc:\/\/GRDB\/documentation\/GRDB\/SQLRequest"]},{"title":"Database Values","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/DatabaseDateComponents","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseValueConvertible","doc:\/\/GRDB\/documentation\/GRDB\/StatementColumnConvertible"]},{"title":"Supporting Types","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/Cursor","doc:\/\/GRDB\/documentation\/GRDB\/FetchRequest"]}],"references":{"doc://GRDB/documentation/GRDB/Row":{"role":"symbol","title":"Row","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Row"}],"abstract":[{"type":"text","text":"A database row."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Row","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Row"}],"url":"\/documentation\/grdb\/row"},"doc://GRDB/documentation/GRDB/DatabaseValueConvertible":{"role":"symbol","title":"DatabaseValueConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseValueConvertible"}],"abstract":[{"type":"text","text":"A type that can convert itself into and out of a database value."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseValueConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseValueConvertible"}],"url":"\/documentation\/grdb\/databasevalueconvertible"},"doc://GRDB/documentation/GRDB/QueryInterface":{"role":"collectionGroup","title":"Record Types and the Query Interface","abstract":[{"type":"text","text":"Record types and the query interface build SQL queries for you"}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/QueryInterface","kind":"article","type":"topic","url":"\/documentation\/grdb\/queryinterface"},"doc://GRDB/documentation/GRDB/FetchableRecord":{"role":"symbol","title":"FetchableRecord","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableRecord"}],"abstract":[{"type":"text","text":"A type that can decode itself from a database row."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/FetchableRecord","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchableRecord"}],"url":"\/documentation\/grdb\/fetchablerecord"},"doc://GRDB/documentation/GRDB/DatabaseCursor":{"role":"symbol","title":"DatabaseCursor","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseCursor"}],"abstract":[{"type":"text","text":"A cursor that lazily iterates the results of a prepared "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Statement"},{"type":"text","text":"."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseCursor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseCursor"}],"url":"\/documentation\/grdb\/databasecursor"},"doc://GRDB/documentation/GRDB/Cursor":{"role":"symbol","title":"Cursor","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cursor"}],"abstract":[{"type":"text","text":"A type that supplies the values of some external resource, one at a time."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Cursor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cursor"}],"url":"\/documentation\/grdb\/cursor"},"doc://GRDB/documentation/GRDB/Statement":{"role":"symbol","title":"Statement","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Statement"}],"abstract":[{"type":"text","text":"A prepared statement."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/Statement","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Statement"}],"url":"\/documentation\/grdb\/statement"},"doc://GRDB/documentation/GRDB/DatabaseConnections":{"role":"collectionGroup","title":"Database Connections","abstract":[{"type":"text","text":"Open database connections to SQLite databases."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseConnections","kind":"article","type":"topic","url":"\/documentation\/grdb\/databaseconnections"},"doc://GRDB/documentation/GRDB/databaseQuestionMarks(count:)":{"role":"symbol","title":"databaseQuestionMarks(count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"databaseQuestionMarks"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Return as many question marks separated with commas as the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"count"}]},{"type":"text","text":" argument."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/databaseQuestionMarks(count:)","kind":"symbol","type":"topic","url":"\/documentation\/grdb\/databasequestionmarks(count:)"},"doc://GRDB/documentation/GRDB/SQL":{"role":"symbol","title":"SQL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQL"}],"abstract":[{"type":"text","text":"An SQL literal."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SQL","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQL"}],"url":"\/documentation\/grdb\/sql"},"doc://GRDB/documentation/GRDB/DatabaseValue":{"role":"symbol","title":"DatabaseValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseValue"}],"abstract":[{"type":"text","text":"A value stored in a database table."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseValue"}],"url":"\/documentation\/grdb\/databasevalue"},"doc://GRDB/documentation/GRDB/FetchRequest":{"role":"symbol","title":"FetchRequest","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchRequest"}],"abstract":[{"type":"text","text":"A type that fetches and decodes database rows."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/FetchRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchRequest"}],"url":"\/documentation\/grdb\/fetchrequest"},"doc://GRDB/documentation/GRDB":{"role":"collection","title":"GRDB","abstract":[{"type":"text","text":"A toolkit for SQLite databases, with a focus on application development"}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB","kind":"symbol","type":"topic","url":"\/documentation\/grdb"},"doc://GRDB/documentation/GRDB/DatabaseDateComponents":{"role":"symbol","title":"DatabaseDateComponents","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseDateComponents"}],"abstract":[{"type":"text","text":"A database value that holds date components."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseDateComponents","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseDateComponents"}],"url":"\/documentation\/grdb\/databasedatecomponents"},"doc://GRDB/documentation/GRDB/StatementColumnConvertible":{"role":"symbol","title":"StatementColumnConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StatementColumnConvertible"}],"abstract":[{"type":"text","text":"A type that can decode itself from the low-level C interface to"},{"type":"text","text":" "},{"type":"text","text":"SQLite results."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/StatementColumnConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StatementColumnConvertible"}],"url":"\/documentation\/grdb\/statementcolumnconvertible"},"doc://GRDB/documentation/GRDB/SQLRequest":{"role":"symbol","title":"SQLRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLRequest"}],"abstract":[{"type":"text","text":"An SQL request that can decode database rows."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SQLRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SQLRequest"}],"url":"\/documentation\/grdb\/sqlrequest"}}}