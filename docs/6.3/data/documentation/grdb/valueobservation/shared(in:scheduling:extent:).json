{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":" "},{"kind":"internalParam","text":"reader"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseReader","preciseIdentifier":"s:4GRDB14DatabaseReaderP","text":"DatabaseReader"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduling"},{"kind":"text","text":" "},{"kind":"internalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservationScheduler","preciseIdentifier":"s:4GRDB25ValueObservationSchedulerC","text":"ValueObservationScheduler"},{"kind":"text","text":" = .async(onQueue: .main), "},{"kind":"externalParam","text":"extent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservationExtent","preciseIdentifier":"s:4GRDB28SharedValueObservationExtentO","text":"SharedValueObservationExtent"},{"kind":"text","text":" = .whileObserved) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservation","preciseIdentifier":"s:4GRDB22SharedValueObservationC","text":"SharedValueObservation"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"_DatabaseValueReducer"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SharedValueObservation"}]}]},{"kind":"parameters","parameters":[{"name":"reader","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A DatabaseReader."}]}]},{"name":"scheduler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A Scheduler. By default, fresh values are"},{"type":"text","text":" "},{"type":"text","text":"dispatched asynchronously on the main queue."}]}]},{"name":"extent","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The extent of the shared database observation."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/groue\/GRDB.swift\/blob\/master\/README.md#what-are-experimental-features"}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["let observation = ValueObservation.tracking { db in","    try Player.fetchAll(db)","}","","let sharedObservation = observation.shared(in: dbQueue)","","let cancellable = try sharedObservation.start { error in","    \/\/ handle error","} onChange: { (players: [Player]) in","    print(\"Fresh players: \\(players)\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The underlying subscription is shared if and only if you start observing"},{"type":"text","text":" "},{"type":"text","text":"the database from the same "},{"type":"codeVoice","code":"SharedValueObservation"},{"type":"text","text":" instance:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Shared","let sharedObservation = ValueObservation.tracking { db in ... }.shared(in: dbQueue)","let cancellable1 = sharedObservation.start(...)","let cancellable2 = sharedObservation.start(...)","","\/\/ NOT shared","let cancellable1 = ValueObservation.tracking { db in ... }.shared(in: dbQueue).start(...)","let cancellable2 = ValueObservation.tracking { db in ... }.shared(in: dbQueue).start(...)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A shared observation starts observing the database as soon as it is"},{"type":"text","text":" "},{"type":"text","text":"subscribed. You can choose if database observation should stop, or not,"},{"type":"text","text":" "},{"type":"text","text":"when its number of subscriptions drops down to zero, with the "},{"type":"codeVoice","code":"extent"},{"type":"text","text":" "},{"type":"text","text":"parameter."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, fresh values are dispatched asynchronously on the"},{"type":"text","text":" "},{"type":"text","text":"main dispatch queue. You can change this behavior by providing a"},{"type":"text","text":" "},{"type":"text","text":"scheduler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservationScheduler\/immediate"},{"type":"text","text":" scheduler"},{"type":"text","text":" "},{"type":"text","text":"notifies all values on the main dispatch queue, and notifies the first"},{"type":"text","text":" "},{"type":"text","text":"one immediately when the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservation\/start(onError:onChange:)"},{"type":"text","text":" method is called:"}]},{"type":"codeListing","syntax":"swift","code":["let observation = ValueObservation.tracking { db in","    try Player.fetchAll(db)","}","","let sharedObservation = observation.shared(","    in: dbQueue,","    scheduling: .immediate)","","let cancellable = try sharedObservation.start { error in","    \/\/ handle error","} onChange: { (players: [Player]) in","    print(\"fresh players: \\(players)\")","}","\/\/ <- here \"fresh players\" is already printed."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the "},{"type":"codeVoice","code":".immediate"},{"type":"text","text":" scheduler requires that the observation is"},{"type":"text","text":" "},{"type":"text","text":"subscribed from the main thread. It raises a fatal error otherwise."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/grdb\/valueobservation\/shared(in:scheduling:extent:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation\/shared(in:scheduling:extent:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a shared value observation that spares database resources by"},{"type":"text","text":" "},{"type":"text","text":"sharing a single underlying "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation"},{"type":"text","text":" subscription."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_ValueReducer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"shared(in:scheduling:extent:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"DatabaseReader","preciseIdentifier":"s:4GRDB14DatabaseReaderP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueObservationScheduler","preciseIdentifier":"s:4GRDB25ValueObservationSchedulerC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SharedValueObservationExtent","preciseIdentifier":"s:4GRDB28SharedValueObservationExtentO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SharedValueObservation","preciseIdentifier":"s:4GRDB22SharedValueObservationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:4GRDB16ValueObservationV6shared2in10scheduling6extentAA06SharedbC0Cy0B0QzGqd___AA0bC9SchedulerCAA0hbC6ExtentOtAA09_DatabaseB7ReducerRzAA0K6ReaderRd__lF","extendedModule":"GRDB","modules":[{"name":"GRDB"}]},"hierarchy":{"paths":[["doc:\/\/GRDB\/documentation\/GRDB","doc:\/\/GRDB\/documentation\/GRDB\/DatabaseObservation","doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation"]]},"seeAlsoSections":[{"title":"Creating A Shared Observation","identifiers":["doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservationExtent"],"generated":true}],"references":{"doc://GRDB/documentation/GRDB/SharedValueObservationExtent":{"role":"symbol","title":"SharedValueObservationExtent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedValueObservationExtent"}],"abstract":[{"type":"text","text":"The extent of the shared subscription to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservation"},{"type":"text","text":"."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservationExtent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SharedValueObservationExtent"}],"url":"\/documentation\/grdb\/sharedvalueobservationextent"},"doc://GRDB/documentation/GRDB/DatabaseObservation":{"role":"collectionGroup","title":"Database Observation","abstract":[{"type":"text","text":"Observe database changes and transactions."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseObservation","kind":"article","type":"topic","url":"\/documentation\/grdb\/databaseobservation"},"doc://GRDB/documentation/GRDB/ValueObservationScheduler/immediate":{"role":"symbol","title":"immediate","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"immediate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueObservationScheduler","preciseIdentifier":"s:4GRDB25ValueObservationSchedulerC"}],"abstract":[{"type":"text","text":"A scheduler which notifies all values on the main queue. The first one"},{"type":"text","text":" "},{"type":"text","text":"is immediately notified when the start() method is called."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservationScheduler\/immediate","kind":"symbol","type":"topic","url":"\/documentation\/grdb\/valueobservationscheduler\/immediate"},"doc://GRDB/documentation/GRDB/SharedValueObservation/start(onError:onChange:)":{"role":"symbol","title":"start(onError:onChange:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onError"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onChange"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyDatabaseCancellable","preciseIdentifier":"s:4GRDB22AnyDatabaseCancellableC"}],"abstract":[{"type":"text","text":"Starts observing the database."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservation\/start(onError:onChange:)","kind":"symbol","type":"topic","url":"\/documentation\/grdb\/sharedvalueobservation\/start(onerror:onchange:)"},"doc://GRDB/documentation/GRDB/ValueObservation/shared(in:scheduling:extent:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_ValueReducer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"shared(in:scheduling:extent:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"DatabaseReader","preciseIdentifier":"s:4GRDB14DatabaseReaderP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueObservationScheduler","preciseIdentifier":"s:4GRDB25ValueObservationSchedulerC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SharedValueObservationExtent","preciseIdentifier":"s:4GRDB28SharedValueObservationExtentO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SharedValueObservation","preciseIdentifier":"s:4GRDB22SharedValueObservationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a shared value observation that spares database resources by"},{"type":"text","text":" "},{"type":"text","text":"sharing a single underlying "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation"},{"type":"text","text":" subscription."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation\/shared(in:scheduling:extent:)","kind":"symbol","type":"topic","url":"\/documentation\/grdb\/valueobservation\/shared(in:scheduling:extent:)"},"https://github.com/groue/GRDB.swift/blob/master/README.md#what-are-experimental-features":{"title":"🔥 EXPERIMENTAL","titleInlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"🔥 EXPERIMENTAL"}]}],"type":"link","identifier":"https:\/\/github.com\/groue\/GRDB.swift\/blob\/master\/README.md#what-are-experimental-features","url":"https:\/\/github.com\/groue\/GRDB.swift\/blob\/master\/README.md#what-are-experimental-features"},"doc://GRDB/documentation/GRDB":{"role":"collection","title":"GRDB","abstract":[{"type":"text","text":"A toolkit for SQLite databases, with a focus on application development"}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB","kind":"symbol","type":"topic","url":"\/documentation\/grdb"},"doc://GRDB/documentation/GRDB/ValueObservation":{"role":"symbol","title":"ValueObservation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueObservation"}],"abstract":[{"type":"codeVoice","code":"ValueObservation"},{"type":"text","text":" tracks changes in the results of database requests, and"},{"type":"text","text":" "},{"type":"text","text":"notifies fresh values whenever the database changes."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueObservation"}],"url":"\/documentation\/grdb\/valueobservation"},"doc://GRDB/documentation/GRDB/DatabaseReader":{"role":"symbol","title":"DatabaseReader","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseReader"}],"abstract":[{"type":"text","text":"A type that reads from an SQLite database."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/DatabaseReader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseReader"}],"url":"\/documentation\/grdb\/databasereader"},"doc://GRDB/documentation/GRDB/SharedValueObservation":{"role":"symbol","title":"SharedValueObservation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedValueObservation"}],"abstract":[{"type":"text","text":"A shared value observation spares database resources by sharing a single"},{"type":"text","text":" "},{"type":"text","text":"underlying "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservation"},{"type":"text","text":" subscription."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/SharedValueObservation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SharedValueObservation"}],"url":"\/documentation\/grdb\/sharedvalueobservation"},"doc://GRDB/documentation/GRDB/ValueObservationScheduler":{"role":"symbol","title":"ValueObservationScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueObservationScheduler"}],"abstract":[{"type":"text","text":"ValueObservationScheduler determines how "},{"type":"codeVoice","code":"ValueObservation"},{"type":"text","text":" notifies its"},{"type":"text","text":" "},{"type":"text","text":"fresh values."}],"identifier":"doc:\/\/GRDB\/documentation\/GRDB\/ValueObservationScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueObservationScheduler"}],"url":"\/documentation\/grdb\/valueobservationscheduler"}}}